# Use Ubuntu 22.04 LTS for stability and long-term support
FROM ubuntu:22.04

# Install necessary build tools and dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    autoconf \
    automake \
    libtool \
    libssl-dev \
    libsqlite3-dev \
    libboost-all-dev \
    libevent-dev \
    libzmq3-dev \
    libdb5.3++-dev \
    libminiupnpc-dev \
    python3 \
    python3-pip \
    git \
    pkg-config \
    bsdextrautils  \
    net-tools \
    wget \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set up the build environment
WORKDIR /build

# Define Berkeley DB options - choose between two versions by commenting/uncommenting

# Option 1: Berkeley DB 4.8.30.NC
# ARG BERKELEYDB_FILENAME=db-4.8.30.NC
# ARG BERKELEYDB_URL=http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz

# Option 2: Berkeley DB 5.3.28
ARG BERKELEYDB_FILENAME=db-5.3.28
ARG BERKELEYDB_URL=https://github.com/berkeleydb/libdb/releases/download/v5.3.28/db-5.3.28.tar.gz

# Fix atomic function naming conflicts in all relevant files
RUN wget ${BERKELEYDB_URL} && \
    tar -xzvf ${BERKELEYDB_FILENAME}.tar.gz && \
    cd ${BERKELEYDB_FILENAME} && \
    find . -type f -exec sed -i 's/__atomic_compare_exchange/__db_atomic_compare_exchange/g' {} + 2>/dev/null || true && \
    find . -type f -exec sed -i 's/__atomic_exchange/__db_atomic_exchange/g' {} + 2>/dev/null || true && \
    cd build_unix && \
    ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=/usr/local && \
    make && make install && \
    cd / && rm -rf ${BERKELEYDB_FILENAME} ${BERKELEYDB_FILENAME}.tar.gz


    # Set up the build environment
WORKDIR /build

# Fetch the source code (using a specific tag for reproducibility)
RUN git clone --branch v27.2 --single-branch https://github.com/bitcoin/bitcoin.git bitcoin

# Move into the source directory
WORKDIR /build/bitcoin

# Run autogen.sh with additional tools
RUN ./autogen.sh

# Configure the build without GUI
RUN ./configure --prefix=/opt/bitcoin --with-gui=no --enable-static --disable-shared --enable-wallet --with-sqlite

# Build bitcoind
RUN make -j$(nproc)

# Install bitcoind to a known location for reproducibility
RUN make install

# Clean up the build environment for a smaller image
RUN make clean && \
    rm -rf /build

# Set up the final environment
ENV PATH="/opt/bitcoin/bin:$PATH"

# Create a data directory for bitcoind
RUN mkdir -p /data
VOLUME ["/data"]